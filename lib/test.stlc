let sum_aux = \ aux. \ n. if n = 0 then n else n + (aux aux (n-1)) end

let sum = sum_aux sum_aux

let fib_aux = \ aux. \ n. if n < 2 then 1 else (aux (n-2)) + (aux (n-1)) end

let fib = fib_aux fib_aux

let sum_fix = fix sum : Int->Int = \ n : Int .
    if n = 0 then 0 else n + (sum (n-1)) end

check sum_fix

eval sum_fix 1

let fib_fix = fix fib : Int->Int = \ n : Int .
    if n < 2 then 1 else (fib (n-2)) + (fib (n-1)) end

check fib_fix

eval fib_fix